Text;Entity;Attribute;Rule
"Предметная область
Предприятие по реализации товаров по заказам. Предприятие
располагает складом, на котором хранятся товары. Для получения товара
клиент оформляет заказ. Для пополнения товаров на складе предприятие
заключает договоры с поставщиками.
Бизнес-правила
1. Организация формирует заказы из товаров, имеющихся на складе.
2. Клиент может оформить заказ на несколько товаров.
3. Формированием заказа занимается один сотрудник.
Минимальный набор сущностей: товар, клиент, поставщик,
сотрудник.
Минимальный набор атрибутов: наименование товара, назначение
товара, стоимость товара; фамилия клиента, контактные данные клиента,
адрес клиента; название фирмы поставщика, фамилия руководителя
фирмы, контактные данные, адрес фирмы; фамилия сотрудника,
должность сотрудника, оклад сотрудника, номер служебного телефона
сотрудника.";товар, клиент, поставщик, сотрудник, заказ, договор_поставки;"""договор поставки:[идентификатор:int,идентификатор поставщика:int,идентификатор товара:int,количество товара:int];заказ:[идентификатор:int,идентификатор клиента:int,идентификатор товара:int,идентификатор сотрудника:int,количество товара:int,стоимость товара:double];клиент:[идентификатор:int,фамилия:string,контактные данные:string];поставщик:[идентификатор:int,название фирмы:string,фамилия руководителя:string,контактные данные:string,адрес фирмы:string];сотрудник:[идентификатор:int,фамилия:string,должность:string,оклад:double,номер служебного телефона:int];товар:[идентификатор:int,наименование:string,назначение:string,стоимость:double]""";клиент>заказ, сотрудник>заказ, договор<товар, поставщик>товар, поставщик>договор_поставки
"Предметная область
Ремонтная мастерская занимается ремонтом бытовой техники.
Клиент оформляет заказ на ремонт изделия. Ремонт изделий
осуществляется с использованием комплектующих, которые имеются на
складе мастерской. Для пополнения комплектующих на складе мастерская
заключает договоры с поставщиками.
Бизнес-правила
1. Существуют клиенты, нескольких категорий приоритетности.2. Каждый клиент может оформить неограниченное количество
заказов.
3. Клиенты оформляют один заказ на ремонт одного изделия.
4. Для получения заменяемой детали сотрудник организации
оформляет отдельный заказ на получение детали со склада.
5. Один заказ выполняется одним сотрудником.
Минимальный набор сущностей: изделие, клиент, сотрудник,
деталь.
Минимальный набор атрибутов: наименование изделия, вид
изделия, стоимость изделия; фамилия клиента, контактные данные
клиента, адрес клиента; фамилия сотрудника, должность сотрудника,
оклад сотрудника, номер служебного телефона сотрудника; название
детали, её стоимость, количество на складе, название фирмы
производителя. ";изделие, клиент, сотрудник, деталь, заказ_клиента, заказ_сотрудника, договор_поставки;"""деталь:[идентификатор:int,название:string,стоимость:double,количество на складе:int,название фирмы:производителя];договор поставки:[идентификатор:int,идентификатор поставщика:int,идентификатор товара:int,количество товара:int];заказ:[идентификатор:int];заказ клиента:[идентификатор клиента:int,идентификатор детали:int,идентификатор сотрудника:int,количество деталей:int,стоимость деталей:double];заказ сотрудника:[идентификатор сотрудника:int,идентификатор детали:int,количество деталей:int];изделие:[наименование:string,вид:string,стоимость:double];клиент:[идентификатор:int,фамилия:string,телефон:int,адрес:string];поставщик:[идентификатор:int];сотрудник:[идентификатор:int,фамилия:string,должность:string,оклад:double,номер служебного телефона:int];товар:[идентификатор:int]""";клиент>заказ_клиента, сотрудник>заказ_клиента, сотрудник>заказ_сотрудника, деталь>заказ_клиента, деталь>заказ_сотрудника, поставщик>деталь, поставщик>договор_поставки
"Предметная область
Фирма по прокату автомобилей. Фирма оказывает услуги,
предоставляя автомобили из своего парка. Фирма выдаёт напрокат
автомобили на основе договора. Сотрудник фирмы фиксируется данные о
клиенте, данные об автомобиле, дату начала проката и количество дней
проката.
Бизнес-правила
1. Клиент оформляет договор на прокат автомобиля.
2. Клиент может оформить несколько договоров.
3. Фирма ежегодно страхует автомобили в различных страховых
компаниях.
4. Стоимость проката зависит от марки автомобиля.
Минимальный набор сущностей: автомобиль, клиент, страховая
компания, сотрудник.
Минимальный набор атрибутов: номер автомобиля, его цвет,
марка, год выпуска, сумма страховки; фамилия клиента, номер его
паспорта и водительского удостоверения, контактные данные (телефон,
адрес), водительский стаж; название страховой компании, номер лицензии, адрес, фамилия руководителя; фамилия сотрудника, его
должность, оклад, служебный телефон.";автомобиль, клиент, страховая_компания, сотрудник, договор;"""автомобиль:[идентификатор:int,номер:int,цвет:string,марка:string,год выпуска:int,сумма страховки:int];договор:[идентификатор:int,идентификатор клиента:int,идентификатор сотрудника:int,дата начала проката:date,количество дней проката:int,идентификатор автомобиля:int,стоимость проката:int];клиент:[идентификатор:int,фамилия:string,номер паспорта:int,номер водительского удостоверения:int,телефон:int,адрес:string,водительский стаж:int];сотрудник:[идентификатор:int,фамилия:string,должность:string,оклад:double,служебный телефон:int];страховая компания:[идентификатор:int,название:string,номер лицензии:int,адрес:string,фамилия руководителя:string]""";клиент>договор, сотрудник>договор, страховая_компания>автомобиль
"Предметная область
Работа гостиницы.
Бизнес-правила
1. В гостинице имеются номера различной категории.
2. Каждый номер закреплен за одним сотрудником. Один сотрудник
может обслуживать несколько номеров.
3. Гость может забронировать номер указанной категории на
заданный срок.
4. Стоимость номер и зависит от его категории и перечня
дополнительных услуг, которыми пользовался гость.
Минимальный набор сущностей: номер, сотрудник, гость, услуга.
Минимальный набор атрибутов: номер комнаты, её тип, статус
(занята, забронирована, свободна), состояние (готова к проживанию,
требует уборки, требует ремонта); фамилия гостя, его категория, номер
паспорта, дата заселения, срок пребывания, гражданство; фамилия
сотрудника, специальность, оклад, контактный телефон.";номер, сотрудник, гость, услуга, бронь;"""бронь:[идентификатор:int,идентификатор гостя:int,идентификатор номера:int,срок пребывания:int,идентификатор сотрудника:int,перечень дополнительных услуг:string,стоимость:double];гость:[идентификатор:int,фамилия:string,категория:int,номер паспорта:int,дата заселения:date,срок пребывания:int,гражданство:string];номер:[идентификатор:int,номер комнаты:int,тип комнаты:string,статус комнаты:string,состояние комнаты:string,идентификатор сотрудника:int];сотрдник:[идентификатор:int];сотрудник:[фамилия:string,специальность:string,оклад:double,контактный телефон:int]""";гость>бронь, сотрудник>бронь, сотрудник>номер
"Предметная область
Ремонт автомобиля.
Бизнес-правила
1. Клиент оформляет договор на ремонт автомобиля.
2. Один автомобиль ремонтирует одна бригада сотрудников.
3. Для ремонта автомобиля используются комплектующие
различного типа и производителей.
4. Стоимость часа работы зависит от и категории бригады.
5. Различают несколько категорий клиентов.
Минимальный набор сущностей: автомобиль, клиент, бригада,
деталь.
Минимальный набор атрибутов: номер автомобиля, его цвет,
марка, год выпуска; фамилия клиента, номер его паспорта и
водительского удостоверения, контактные данные (телефон, адрес); номер
бригады, категория, тип (определяет, какие марки машин могут
ремонтировать), фамилия бригадира, служебный телефон, стоимость часа
работы; название детали, её стоимость, производитель, наличие на складе.";автомобиль, клиент, бригада, деталь, договор, договоры_детали;"""автомобиль:[идентификатор:int,номер:int,цвет:string,марка:string,год выпуска:int];бригада:[идентификатор:int,номер:int,категория:int,тип:string,фамилия бригадира:string,служебный телефон:int,стоимость часа работы:double];деталь:[идентификатор:int,название:string,стоимость:double,производитель:string,наличие на складе:boolean];договор:[идентификатор:int,идентификатор клиента:int,идентификатор бригады:int,идентификатор автомобиля:int,стоимость:double];договоры детали:[идентификатор договора:int,идентификтор детали:int,количество деталей:int];клиент:[идентификатор:int,фамилия:string,номер паспорта:int,номер водительского удостоверения:int,телефон:int,адрес:string,категория:int]""";бригада>договор, клиент>договор, договор<>деталь
"Предметная область
Работа агентства недвижимости.
Бизнес-правила
1. Агентство занимается оформлением недвижимости в аренду.
2. Клиент может арендовать несколько объектов.
3. Для оформления одного объекта оформляется один договор.
4. С каждым объектом недвижимости работает один сотрудник.
Минимальный набор сущностей: клиент, сотрудник, объект
недвижимости, договор.
Минимальный набор атрибутов: фамилия клиента, его категория,
контактные данные клиента, адрес клиента, номер паспорта; фамилия
сотрудника, должность сотрудника, оклад сотрудника, номер служебного
телефона сотрудника; вид объекта (дом, квартира, комната и т.п.), его
стоимость, адрес, состояние (новое, после ремонта, требует ремонта и
т.п.), статус (занят, свободен); дата заключения договора, срок договора.";клиент, сотрудник, объект_недвижимости, договор;"""договор:[идентификатор:int,идентификатор клиента:int,идентификатор сотрудника:int,идентификатор объекта:int,дата заключения:date,срок:int];клиент:[идентификатор:int,фамилия:string,категория:int,телефон:int,адрес:string,номер паспорта:int];объект:[идентификатор:int];объект недвижимости:[вид:string,стоимость:double,адрес:string,состояние:string,статус:string,идентификатор сотрудника:int];сотрдник:[идентификатор:int];сотрудник:[фамилия:string,специальность:string,оклад:double,номер служебного телефона:int]""";клиент>договор, сотрудник>договор, объект_недвижимости>договор, сотрудник>объект_недвижимости
"Предметная область
Отдел больницы по работе с договорами.
Бизнес-правила
1. Пациент заключает договор на лечение в заданном отделении
больницы.
2. У каждого пациента есть лечащий врач.
3. Пациент может оплачивать свой договор за счёт страховой
компании.
4. Обследование пациента проводит не только лечащий врач.
Минимальный набор сущностей: пациент, врач, обследование,
страховая компания.
Минимальный набор атрибутов: фамилия пациента, его категория,
номер паспорта, номер страхового полиса, дата поступления,
гражданство; фамилия врача, категория, специальность, оклад,
контактный телефон; название обследования, вид обследования, дата
проведения обследования, стоимость обследования; название страховой
компании, номер лицензии, фамилия руководителя, контактный телефон.";пациент, врач, обследование, страховая_компания, договор, обследования_врачи;"""врач:[идентификатор:int,фамилия:string,специальность:string,оклад:double,контактный телефон:int,категория:int];договор:[идентификатор:int,идентификатор пациента:int,идентификатор врача:int. договор,источник оплаты:string];обследование:[идентификатор:int,идентификатор пациента:int,название:string,вид:string,стоимость:double];обследования врачи:[идентификатор обследования:int,идентификатор врача:int];пациент:[идентификатор:int,фамилия:string,категория:int,телефон:int,адрес:string,номер паспорта:int,номер страхового полиса:int,дата поступления:date,гражданство:string];страховая компания:[идентификатор:int,название:string,номер лицензии:int,фамилия руководителя:string,контактный телефон:int]""";пациент-договор, врач>договор, пациент>обследование, врач<>обследование
"Предметная область
Типография занимается выпуском печатной продукции.
Бизнес-правила
1. Для выполнения работ типография заключает договор с клиентом.
2. Один договор выполняет одна бригада сотрудников.
3. Стоимость работ зависит от вида продукции, вида материалов и
тиража издания.
4. Различают несколько категорий клиентов.
5. Для выполнения работ используются материалы.
Минимальный набор сущностей: клиент, издание, бригада
сотрудников, материал.
Минимальный набор атрибутов: фамилия клиента, контактные
данные клиента, адрес клиента; наименование издания, его вид, стоимость
издания; номер бригады, специализация, номер служебного телефона
бригадира; название материала, её стоимость, количество на складе,
название фирмы производителя. ";клиент, издание, бригада_сотрудников, материал, договор, договоры_материалы;"""бригада:[идентификатор:int,номер:int,специализация:string,номер служебного телефона бригадира:int];договор:[идентификатор:int,идентификатор клиента:int,идентификатор бригады:int,идентификатор издания:int,стоимость:double,тираж издания:int];договоры материалы:[идентификатор договора:int,идентификатор материала:int];издание:[идентификатор:int,наименование:string,вид:string,стоимость:double];клиент:[идентификатор:int,фамилия:string,категория:int,телефон:int,адрес:string];материал:[идентификатор:int,название:string,стоимость:double,название фирмы производителя:string];метариал:[количество на складе:int]""";клиент>договор, бригада>договор, издание>договор, договор<>материал
"Предметная область
Страховая компания.
Бизнес-правила
1. Договор страхования заключается между страховой компанией и
клиентом сроком не более 1 года (но может быть и меньше).
2. При заключении договора указывается вид страхования, страховая
сумма, дата начала действия договора.
3. Один клиент может заключить несколько договоров.
4. Один сотрудник работает с несколькими клиентами.
5. Страхование осуществляется на основе существующего вида
услуг.
Минимальный набор сущностей: клиент, сотрудник, страховой
продукт, договор.
Минимальный набор атрибутов: фамилия клиента, его категория,
контактные данные клиента, адрес клиента, номер паспорта; фамилия
сотрудника, должность сотрудника, оклад сотрудника, номер служебного
телефона сотрудника; название страхового продукта (дом, квартира,
комната, автомобиль и т.п.), его базовая стоимость; дата заключения
договора, дата завершения, объект страхования, его оценочная стоимость.";клиент, сотрудник, страховой_продукт, договор, вид_страхования;"""вид страхования:[идентификатор:int,название:string,описание:string];договор:[идентификатор клиента:int,идентификатор сотрудника:int,объект стрхования:int,идентификатор вида страхования:int,дата заключения:date,дата завершения:date,оценочная стоимость объекта:int,страховая сумма:double];догоор:[идентификатор:int];клиент:[идентификатор:int,фамилия:string,номер паспорта:int,телефон:int,адрес:string];сотрдник:[идентификатор:int];сотрудник:[фамилия:string,должность:string,оклад:double,номер служебного телефона:int];страховой продукт:[идентификатор:int,название:string,базовая стоимость:double]""";клиент>договор, сотрудник>договор, вид_страхования>договор, объект_страхования>договор, договор:дата_завершения-договор:дата_заключения<=360
"Домашняя коллекция дисков
Необходимо создать базу данных для приложения, учитывающего информацию о домашней коллекции CD и DVD. Хранится информация о контенте диска (музыка, фильмы). Для музыкального произведения хранится информация об исполнителе, альбоме, название песни, жанр и год выхода альбома. Для фильма – название, режиссер, список актеров и жанр фильма. Необходимо учитывать, что песня или фильм могут встречаться более чем на одном диске.";диск, музыкальное_произведение, фильм, диски_музыкальные_произведения, диски_фильмы;"""диск:[идентификатор:int,контент:string];диски музыкальные произведения:[идентификатор диска:int,идентификатор музыкального произведения:int];диски фильмы:[идентификатор диска:int,идентификатор фильма:int];музыкальное произведение:[идентификатор:int,исполнитель:string,название:string,альбом:string,жанр:string,год выпуска:int];фильм:[идентификатор:int,название:string,режиссер:string,список актеров:string,жанр:string]""";диск<>музыкальное_произведение, диск<>фильм
"Цветочный магазин
Необходимо создать базу данных для приложения, обслуживающего информационные потребности цветочного магазина. В БД должны храниться сведения о цветах, которые есть в продаже (название, класс, цена, кол-во экземпляров, срок завоза, страна происхождения). Кроме этого, необходимо создать иерархический классификатор цветов (Класс-Отряд-Семейство-Вид) для облегчения поиска необходимых растений. Каждый класс имеет название и краткое описание. БД также должна учитывать продажи цветов (дата продажи, кол-во проданных экземпляров).";цветок, класс, отряд, семейство, вид, продажа;"""вид:[идентификатор:int,название:string,краткое описание:string];класс:[идентификатор:int,название:string,краткое описание:string,идентификатор отряда:int];отряд:[идентификатор:int,название:string,краткое описание:string,идентификатор семейста:int];продажа:[идентификатор:int,идентификатор цветка:int,количество проданных экземпляров:int,дата:date];семейство:[идентификатор:int,название:string,краткое описание:string,идентификатор вида:int];цветок:[идентификатор:int,название:string,идентификатор класса:int,цена:double,количество экземпляров:int,срок завоза:date,страна происхождения:string]""";цветок>продажа, отряд>класс, семейство>отряд, вид>семейство, класс>цветок
"Пункт проката видеопродукции
Для пункта проката видеопродукции необходимо создать приложение и БД для учета выдачи видео. Видео может храниться на DVD, CD или видеокассетах, причем один и тот же фильм может встречаться на разных носителях. Для каждого фильма необходимо хранить информацию о названии, жанре, режиссере и список актеров. Для каждой единицы проката необходимо хранить цену проката за сутки и сумму залога. При выдаче прокатной продукции необходимо сохранять дату выдачи и ФИО клиента. При возврате – дату возврата.";единица_проката, фильм, выдача, возврат;"""возврат:[идентификатор:int,идентификатор единицы проката:int,дата:date];выдача:[идентификатор:int,идентификатор единицы проката:int,дата:date,ФИО:string];единица проката:[идентификатор:int,тип хранения:string,идентификатор фильма:int,цена проката за сутки:int,сумма залога:int];фильм:[идентификатор:int,название:string,жанр:string,режиссер:string,список актеров:string]""";фильм>единица_проката, единица_проката>выдача, единица_проката>возврат
"Платные курсы
При факультете ПММ организовали платные курсы для обучения школьников информатике. В эти курсы входят «Основы языка PASCAL», «Web - дизайн» и «Моделирование в 3D MAX». Не исключено, что список курсов будет расширен. Для каждого курса хранится информация о продолжительности (в часах), стоимости, программа курса (список тем), а также фамилия преподавателя. Школьники могут записаться на один или несколько курсов. При регистрации школьника записывается его ФИО и школа и класс, в которой он обучается. Оплата может производиться сразу, а может – позже. При окончании курса выдается свидетельство, номер которого записывается в БД.";курс, школьник, прохождение_курса;"""курс:[идентификатор:int,название:string,фамилия преподавателя:string,программа:text,продолжительность в часах:int,стоимость:double];прохождение крса:[идентификатор:int];прохождение курса:[идентификатор курса:int,идентификатор школьника:int,дата оплаты:date,дата окончания:date,номер свидетельства:int,дата начала:date];школьник:[идентификатор:int,ФИО:string,школа:string,класс:string]""";школьник>прохождение_курса, курс>прохождение_курса
"Для хранения данных на сайте необходимо создать базу данных. Требования к данным:
1. Необходимо хранить информацию о пользователях: псевдоним, реальные фамилию,имя, отчество, номер ICQ, телефон, e-mail. У пользователя может быть несколько e-mail, но только один из них является основным, который будет использоваться для связи. Кроме этого, у пользователя может быть один или несколько аватаров – графических файлов. Для аватара необходимо хранить имя файла и размер.
2. Каждый пользователь может создать несколько сообщений, которые тоже нужно хранить в базе данных. Для каждого сообщения хранится тема, дата создания и текст сообщения. К сообщению могут быть приложены дополнительные файлы, для них нужно хранить полное размещение, тип (документ, графика, видео), размер и описание.
3. На каждое сообщение другие пользователи могут оставлять свои сообщения. Допускаются анонимные пользователи.
4. У каждого пользователя могут быть друзья из числа других пользователей.";пользователь, аватар, e-mail, сообщение, файл, друзья;"""e-mail:[идентификатор:int,адрес:string,является основным:boolean,идентификатор пользователя:int];аватар:[идентификатор:int,имя файла:string,размер файла:double,идентификатор пользователя:int];друзья:[идентификатор пользователя:int,идентификатор пользователя:int];пользователь:[идентификатор:int,псевдоним:string,фамилия:string,имя:string,отчество:string,номер ICQ:int,телефон:int];сообщение:[идентификатор:int,тема:string,текст:text,дата созания:date,ответ на сообщение:int,идентификатор пользователя:int];файл:[полное размещение:string,тип:string,размер:double,описание:text];файла:[идентификатор:int]""";пользователь>аватар, пользователь>e-mail, пользователь>сообщение, сообщение<сообщение, сообщение>файл, пользователь<>пользователь
"База данных ГИБДД
В ГИБДД решили автоматизировать деятельность одного из своих подразделений и создать приложение для учета автомобилей. В базе данных необходимо хранить информацию об автомобилях и их владельцах. Человек может владеть несколькими автомобилями. Необходимо хранить следующую информацию:
1. О владельце: ФИО, номер паспорта, номер водительского удостоверения, адрес
2. Об автомобиле: модель, номер кузова, номер двигателя, номер тех. паспорта, дату регистрации.
3. Необходимо хранить историю смены владельцев
4. Так же необходимо хранить информацию об угнанных и найденных автомобилях, для этого необходимо предусмотреть хранение информации о дате угона, месте угона, дате и месте нахождения.";автомобиль, владелец, история, угон;"""автомобиль:[идентификатор:int,модель:string,номер двигателя:int,номер тех паспорта:int,дата регистрации:date];владелец:[ФИО:string,номер паспорта:int,номер водительского удостоверения:int,адрес:string];история:[идентификатор:int,идентификатор автомобиля:int,дата начала:date,дата конца:date,идентификатор владельца:int];угон:[идентификатор:int,идентификатор автомобиля:int,дата:date,место:string,дата нахождения:date,место нахождения:string]""";владелец>автомобиль, автомобиль>история, владелец>история, автомобиль>угон
"Приложение Speedy Pizza

Пиццерии необходимо приложение для приема заказов и оформления доставки пиццы. Вот что было выяснено во время беседы с директором:
1. Покупатель звонит и оформляет заказ на доставку
a. Фиксируется время заказа и блюда, которые были заказаны
b. Также фиксируется адрес доставки, имя клиента и контактный телефон
c. В заказе могут быть несколько блюд
d. Могут быть заказаны несколько одинаковых блюд
2. Для доставки могут быть специальные инструкции, указанные в заказе
3. После доставки регистрируется время
4. Помимо пиццы в также меню присутствуют салаты и спагетти
5. Для каждого блюда указывается цена. История изменения цен заказчика не интересует
6. Для каждого блюда необходимо указывать составляющие
7. Постоянным клиентам после 50 заказов делается скидка 15%, а после 100 – 20%";заказ, клиент, блюдо, заказы_блюда;"""блюдо:[идентификатор:int,название:string,составляющие:text,цена:double];заказ:[идентификатор:int,время заказа:timestamp,идентификатор клиента:int,специальные инструкции:text,время доставки:timestamp,сумма:double,скидка:int];заказы блюда:[идентификатор заказа:int,идентификатор блюда:int,количество:int];клиент:[идентификатор:int,фамилия:string,адрес:string,контактный телефон:int,количество заказов:int]""";заказ<>блюдо, клиент>заказ
"База данных хроники восхождений в альпинистском клубе. В
базе данных должны записываться даты начала и завершения каждого восхождения, имена и адреса участвовавших в нем альпинистов, название и высота горы, страна и район, где эта гора
расположена.";восхождение, альпинист, гора, восхождения_альпинисты;"""восхождение:[идентификатор:int, дата начала:date, дата завершения:date];альпинист:[идентификатор:int, имя:string, адрес:string];гора:[идентификатор:int, название:string, высота:double, страна:string, район:string];восхождения альпинисты:[идентификатор восхождения:int, идентификатор альпиниста:int]""";альпинист<>восхождение, гора>восхождение
"База данных медицинского кооператива. Базу данных использует для работы коллектив врачей. В таблицы должны быть занесены имя, пол, дата рождения и домашний адрес каждого их пациента. Всякий раз, когда врач осматривает больного, явившегося к нему на прием, или сам приходит к нему на дом, он записывает дату и место, где проводится осмотр, симптомы, диагноз и
предписания больному, проставляет имя пациента, а также свое
имя. Если врач прописывает больному какое-либо лекарство, в
таблицу заносится название лекарства, способ его приема, словесное описание предполагаемого действия и возможных побочных эффектов.";врач, пациент, осмотр, лекарство;"""врач:[идентификатор:int, имя:string];пациент:[идентификатор:int, имя:string, пол:string, дата рождения:date, домашний адрес:string];осмотр:[идентификатор:int, дата:date, место:string, симптомы:text, диагноз:text, предписания:text, идентификатор пациента:int, идентификатор врача:int, идентификатор лекарства:int];лекарство:[идентификатор:int, название:string, способ приема:string, описание предполагаемого действия:text, возможные побочные эффекты:text]""";врач>осмотр, пациент>осмотр, лекарство>осмотр
"База данных Городской Думы. В базе хранятся имена, адреса,
домашние и служебные телефоны всех членов Думы. В Думе работает порядка сорока комиссий, все участники которых являются членами Думы. Каждая комиссия имеет свой профиль, например, вопросы образования, проблемы, связанные с жильем и так
далее. Данные по каждой из комиссий включают: ее нынешний
состав и председатель, прежние председатели и члены этой комиссии, участвовавшие в ее работе за прошедшие 10 лет, даты
включения и выхода из состава комиссии, избрания ее председателей. Члены Думы могут заседать в нескольких комиссиях. В базу заносятся время и место проведения каждого заседания комиссии с указанием депутатов и служащих Думы, которые участвуют
в его организации.";член думы, комиссия, заседание, история состава, история председателей, заседания_члены думы, комиссии_члены думы;"""член думы:[идентификатор:int, имя:string, адрес:string, домашний телефон:int, служебный телефон:int];комиссия:[идентификатор:int, профиль:string, идентификатор председателя:int];заседание:[идентификатор:int, время проведения:timestamp, место проведения:string, депутаты:text];история состава:[идентификатор комиссии:int, идентификатор члена думы:int, дата включения:date, дата выхода:date];история председателей:[идентификатор комиссии:int, идентификатор члена думы:int, дата избрания:date];заседания_члены думы:[идентификатор заседания:int, идентификатор члена думы:int], комиссии_члены думы:[идентификатор комиссии:int, идентификатор члена думы:int]""";член думы<>комиссия, член думы<>заседание, член думы<>история председателей, комиссия<>история председателей, член думы>комиссия
"Фирме принадлежит небольшая флотилия рыболовных катеров. Каждый катер имеет
""паспорт"", куда занесены его название, тип, водоизмещение и
дата постройки. Фирма регистрирует каждый выход на лов, записывая название катера, имена и адреса членов команды с указанием их должностей (капитан, боцман и т.д.), даты выхода и возвращения, а также вес пойманной рыбы отдельно по сортам (например, трески). За время одного рейса катер может посетить несколько банок. Фиксируется дата прихода на каждую банку и дата
отплытия, качество выловленной рыбы (отличное, хорошее,
плохое). На борту улов не взвешивается. ";катер, рейс, член команды, банка, сорт рыбы, рейсы_банки, рейсы_сорта рыбы, рейсы_члены команды;"""катер:[идентификатор:int, название:string, тип:string, водоизмещение:double, дата постройки:date];рейс:[идентификатор:int, идентификатор катера:int, дата выхода:date, дата возвращения:date];член команды:[идентификатор:int, имя:string, адрес:string, должность:string];банка:[идентификатор:int, название:string, расположение:string];сорт рыбы:[идентификатор:int, название:string];рейсы_банки:[идентификатор рейса:int, идентификатор банки:int, качество рыбы:string, дата прихода:date, дата отплытия:date];рейсы_сорта рыбы:[идентификатор рейса:int, идентификатор сорта рыбы:int, вес сорта рыбы:double];рейсы_члены команды:[идентификатор рейса:int, идентификатор члена команды:int]""";катер>рейс, член команды<>рейс, сорт рыбы<>рейс, банка<>рейс
"База данных фирмы, проводящей аукционы. Фирма занимается продажей с аукциона антикварных изделий и произведений
искусства. Владельцы вещей, выставляемых на проводимых
фирмой аукционах, юридически являются продавцами. Лица,
приобретающие эти вещи, именуются покупателями. Получив
от продавцов партию предметов, фирма решает, на котором из
аукционов выгоднее представить конкретный предмет. Перед
проведением очередного аукциона каждой из выставляемых на
нем вещей присваивается отдельный номер лота, играющий ту
же роль, что и введенный ранее шифр товара. Две вещи, продаваемые на различных аукционах, могут иметь одинаковые номера
лотов.
В книгах фирмы делается запись о каждом аукционе. Там отмечаются дата, место и время его проведения, а также специфика
(например, выставляются картины, написанные маслом и не ранее 1900 г.). Заносятся также сведения о каждом продаваемом
предмете: аукцион, на который он заявлен, номер лота, продавец,
отправная цена и краткое словесное описание. Продавцу разрешается выставлять любое количество вещей, а покупатель имеет
право приобретать любое количество вещей. Одно и то же лицо
или фирма может выступать и как продавец, и как покупатель.
После аукциона служащие фирмы, проводящей аукционы, записывают фактическую цену, уплаченную за проданный предмет,
и фиксируют данные покупателя. ";вещь, продавец, покупатель, аукцион, продажа;"""вещь:[идентификатор:int, идентификатор аукциона:int, идентификатор продавца:int, номер лота:int, отправная цена:double, краткое описание:text];продавец:[идентификатор:int, имя:string, телефон:int];покупатель:[идентификатор:int, имя:string, телефон:int];аукцион:[идентификатор:int, дата проведения:date, место проведения:string, специфика:text];продажа:[идентификатор:int, идентификатор аукциона:int, идентификатор вещи:int, идентификатор покупателя:int, фактическая цена:double]""";вещь-аукцион, вещь-продажа, ауцкион>продажа, продавец>вещь, покупатель>продажа
"Разработать информационную систему обслуживания библиотеки, которая содержит следующую
информацию: названия книг, ФИО авторов, наименования издательств, год издания, количество страниц, количество иллюстраций, стоимость, название филиала библиотеки или книгохранилища, в которых находится книга, количество имеющихся в библиотеке экземпляров конкретной книги, количество студентов,
которым выдавалась конкретная книга, названия факультетов, в
учебном процессе которых используется указанная книга.";книга, книги в библиотеке, выдача книг, использование книг ;"""книга:[идентификатор:int, название книги:string, ФИО авторов:string, наименование издательства:string, год издания:int, количество страниц:int, количество иллюстраций:int, стоимость:double, название филиала библиотеки:string];книги в библиотеке:[идентификатор книги:int, количество книг:int];выдача книг:[идентификатор книги:int, количество выданных книг:int];использование книг:[идентификатор книги:int, название факультета:string]""";книга>количество книг, книга>количество выданных книг, книга>название факультета
"База данных по учету успеваемости студентов. База данных
должна содержать данные о контингенте студентов (фамилия,
имя, отчество, год поступления, форма обучения (дневная/вечерняя/заочная), номер или название группы); об учебном
плане (название специальности, дисциплина, семестр, количество отводимых на дисциплину часов, форма отчетности (экзамен/зачет)); о журнале успеваемости студентов (год/семестр, студент, дисциплина, оценка).";студент, учебный план, журнал успеваемости;"""студент:[идентификатор:int, имя:string, фамилия:string, отчество:string, год поступления:int, форма обучения:string, номер или название группы:string];учебный план:[идентификатор:int, название специальности:string, дисциплина:string, семестр:int, количество отводимых часов:int, форма отчетности:string];журнал успеваемости:[идентификатор:int, год:int, семестр:int, идентификатор дисциплины:int, идентификатор студента:int, оценка:int]""";студент>журнал успеваемости, дисциплина>журнал успеваемости
"База данных для учета аудиторного фонда университета. База данных должна содержать следующую информацию об аудиторном фонде университета. Наименование корпуса, в котором
расположено помещение, номер комнаты, расположение комнаты в корпусе, ширина и длина комнаты в метрах, назначение и
вид помещения, подразделение университета, за которым закреплено помещение. В базе данных также должна быть информация о высоте потолков в помещениях в зависимости от места
расположения помещений в корпусе. Следует также учитывать,
что структура подразделений университета имеет иерархический
вид, когда одни подразделения входят в состав других (факультет, кафедра, лаборатория). ";корпус, помещение, комната, подразделение;"""корпус:[идентификатор:int, наименование:string, адрес:string];помещение:[идентификатор:int, расположение в корпусе:string, назначение:string, вид:string, идентификатор подразделения университета:int, высота потолков:double];комната:[идентификатор:int, номер комнаты:int, ширина:double, длина:double, идентификатор помещения:int];подразделение:[идентификатор:int, наименование:string, тип:string, родительское подразделение:int]""";корпус>помещение, помещение>комната, подразделение>помещение, подразделение>подразделение
"База данных для регистрации происшествий. Необходимо
создать Базу данных для регистрации происшествий. База данных должна содержать данные для регистрации сообщений о
происшествиях (регистрационный номер сообщения, дата регистрации, краткая фабула (тип происшествия); информацию о
принятом по происшествию решении (отказано в возбуждении
дел, удовлетворено ходатайство о возбуждении уголовного дела с
указанием регистрационный номера заведенного дела, отправлено по территориальному признаку); информацию о лицах, виновных или подозреваемых в совершении происшествия (регистрационный номер лица, фамилия, имя, отчество, адрес, количество судимостей), отношение конкретных лиц к конкретным
происшествиям (виновник, потерпевший, подозреваемый, свидетель)";сообщение о происшествии, решение по происшествию, физическое лицо, отношение к происшествию;"""сообщение о происшествии:[идентификатор:int, регистрационный номер:int, дата регистрации:date, краткая фабула:string];решение по происшествию:[идентификатор:int, идентификатор сообщения о происшествии:int,  тип:string, описание:text];физическое лицо:[идентификатор:int, фамилия:string, имя:string, отчество:string, адрес:string, количество судимостей:int];отношение к происшествию:[идентификатор сообщения о происшествии:int, идентификатор физического лица:int, категория:string]""";физическое лицо>отношение к просшествию, решение по происшествию>сообщение о происшествии, сообщение о происшествии>отношение к происшествию
"База данных для обслуживания работы конференции. База
данных должна содержать справочник персоналий участников
конференции (фамилия, имя, отчество, ученая степень, ученое
звание, научное направление, место работы, кафедра (отдел),
должность, страна, город, почтовый индекс, адрес, рабочий телефон, домашний телефон, e-mail), и информацию, связанную с
участием в конференции (докладчик или участник, дата рассылки 1-го приглашения, дата поступления заявки, тема доклада, отметка о поступлении тезисов, дата рассылки 2-го приглашения,
дата поступления оргвзноса, размер поступившего оргвзноса, дата приезда, дата отъезда, потребность в гостинице). ";участник конференции, участие в конференции;"""участник конференции:[идентификатор:int, фамилия:string, имя:string, отчество:string, ученая степень:string, ученое звание:string, научное направление:string, место работы:string, кафедра:string, должность:string, страна:string, город:string, почтовый индекс:int, адрес:string, рабочий телефон:int, домашний телефон:int, e-mail:string];участие в конференции:[идентификатор:int, идентификатор участника конференции:int, название конференции:string, тип участника конференции:string, дата рассылки 1-го приглашения:date, дата поступления заявки:date, тема доклада:string, отметка о поступлении тезисов:boolean, дата рассылки 2-го приглашения:date, дата поступления оргвзноса:date, размер поступившего оргвзноса:double, дата приезда:date, дата отъезда:date, потребность в гостинице:boolean]""";участник конференции>участие в конференции
"База данных должна
обеспечить автоматизацию складского учета. В ней должны содержаться следующие данные:
• информация о ""единицах хранения"" - номер ордера, дата,
код поставщика, балансный счет, код сопроводительного документа по справочнику документов, номер сопроводительного документа, код материала по справочнику материалов,
счет материала, код единицы измерения, количество пришедшего материала, цена единицы измерения);
• информация о хранящихся на складе материалах (справочник
материалов - код класса материала, код группы материала,
наименование материала);
• информация о единицах измерения конкретных видов материалов - код материала, единица измерения (метры, килограммы, литры и т.д.);
• информация о поставщиках материалов - код поставщика,
его наименование, ИНН, юридический адрес (индекс, город,
улица, дом), адрес банка (индекс, город, улица, дом), номер
банковского счета. ";единица хранения, материал, класс материала, группа материала, единица измерения, поставщик материала;"""единица хранения:[идентификатор:int, номер ордера:int, дата:date, код поставщика:int, балансный счет:double, код сопроводительного документа:int, код материала:int, счет материала:double, код единицы измерения:int, количество пришедшего материала:int, цена единицы измерения:double];сопроводительный документ:[идентификатор:int, номер:int, название:string];материал:[идентификатор:int, код класса материала:int, код группы материала:int, наименование материала:int];класс материала:[идентификатор:int, наименование:string, описание:text];группа материала:[идентификатор:int, наименование:string, описание:text];единица измерения:[идентификатор:int, код материала:int, единица измерения:string];поставщик материала:[идентификатор:int, код поставщика:int, наименование:string, ИНН:int, юридический адрес:string, адрес банка:string, номер банковского счета:int]""";материал>единица хранения, материал>класс материала, материал>группа материала, единица измерения>материал, материал>поставщик материала, сопроводительный документ-единица хранения
